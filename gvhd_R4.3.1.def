Bootstrap: docker
From: r-base:4.3.1

%environment
	export PATH=/opt/miniconda3/bin:${PATH}
        export PATH=/opt/homer/bin:${PATH}
        export PATH=/opt/samtools/bin:${PATH}
%post
        # Update Ubuntu
        apt-get -y update
	
	# System libraries need to install R libraries
	apt-get -y install libfontconfig1-dev
	apt-get -y install libxml2-dev
	apt-get -y install libssl-dev
	apt-get -y install libcurl4-openssl-dev
	apt-get -y install libgit2-dev
	apt-get -y install libharfbuzz-dev
	apt-get -y install libfribidi-dev
	apt-get -y install libfreetype6-dev
	apt-get -y install libpng-dev
	apt-get -y install libtiff5-dev
	apt-get -y install libjpeg-dev
	apt-get -y install libmariadb-dev
	apt-get -y install libgsl-dev
	apt-get -y install libcairo2-dev
	apt-get -y install libhdf5-dev
	apt-get -y install libfftw3-dev
	apt-get -y install libxt-dev
	apt-get -y install libudunits2-dev
	apt-get -y install libgdal-dev
	apt-get -y install libnlopt-dev
	apt-get -y install wget

	# Bioconductor Packages
        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install(version = "3.17")'


        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("JASPAR2020")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("EnsDb.Mmusculus.v79")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("chromVAR")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("motifmatchr")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("BSgenome.Mmusculus.UCSC.mm10")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("ComplexHeatmap")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("EnsDb.Hsapiens.v86")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("biomaRt")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("rGREAT")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("HSMMSingleCell")'

	R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("HSMMSingleCell")'

	R -e 'if (!require("BiocManager", quietly = TRUE))
	    install.packages("BiocManager")
	BiocManager::install("multtest")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
            install.packages("BiocManager")
        BiocManager::install("Rsubread")'

        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("edgeR")'


        R -e 'if (!require("BiocManager", quietly = TRUE))
        install.packages("BiocManager")
        BiocManager::install("DESeq2")'
	
	# R libraries 
	R -e 'install.packages("tidyverse", dependencies=TRUE)'
        R -e 'install.packages("gprofiler2", dependencies = TRUE)'
        R -e 'install.packages("clustree", dependencies = TRUE)'
        R -e 'install.packages("UpSetR", dependencies = TRUE)'
        R -e 'install.packages("circlize", dependencies = TRUE)'
        R -e 'install.packages("ggpubr", dependencies = TRUE)'
        R -e 'install.packages("devtools", dependencies = TRUE)'
	R -e 'setRepositories(ind=1:3); install.packages("Seurat", dependencies = TRUE)'
        R -e 'setRepositories(ind=1:3); install.packages("Signac", dependencies = TRUE)'

        R -e 'devtools::install_github("satijalab/seurat-data")'
	R -e 'devtools::install_github("immunogenomics/presto")'
	R -e 'remotes::install_github("mojaveazure/seurat-disk")'

	# Install Python 3.9.16
	INSTALL_SCRIPT=Miniconda3-py39_23.3.1-0-Linux-x86_64.sh
        wget https://repo.anaconda.com/miniconda/${INSTALL_SCRIPT}
        bash ${INSTALL_SCRIPT} -b -p /opt/miniconda3
        rm ${INSTALL_SCRIPT}

	# Install Python packages 
        /opt/miniconda3/bin/conda install pandas -y
        /opt/miniconda3/bin/conda install scikit-learn -y
        /opt/miniconda3/bin/conda install -c conda-forge matplotlib -y
        /opt/miniconda3/bin/conda install -c anaconda seaborn -y
        /opt/miniconda3/bin/conda install -c anaconda scipy -y
	/opt/miniconda3/bin/conda install -c anaconda jupyter
	/opt/miniconda3/bin/conda install -c anaconda ipython
        /opt/miniconda3/bin/pip install distinctipy
	/opt/miniconda3/bin/pip install deeptools

	# Install samtools
        mkdir -p /opt/samtools && cd /opt/samtools
        wget https://github.com/samtools/samtools/releases/download/1.17/samtools-1.17.tar.bz2
        tar -xf samtools-1.17.tar.bz2
        cd samtools-1.17
        ./configure --prefix=/opt/samtools
        make
	make install

	# Install HOMER
        mkdir -p /opt/homer && cd /opt/homer
        wget http://homer.ucsd.edu/homer/configureHomer.pl
        perl /opt/homer/configureHomer.pl -install

